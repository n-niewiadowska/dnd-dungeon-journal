{
	"info": {
		"_postman_id": "18b993b0-ca8c-4dfe-8cc9-8da09f1e83a0",
		"name": "dnd-items",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27144670"
	},
	"item": [
		{
			"name": "GET - all items",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is a valid JSON array\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/item",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by valid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains item data\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"bonusValue\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/item/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/item/10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by skill effect",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should return items with the given skill effect\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/item/skills?effect=+3 defense",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"skills"
					],
					"query": [
						{
							"key": "effect",
							"value": "+3 defense"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - new item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should create a new item\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"bonusValue\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Ancient bow\",\n    \"description\": \"Bow made by ancient Elves, found in the depths of Deadwood\",\n    \"bonusValue\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/item",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - new item - invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"A\",\n    \"description\": \"Bow made by ancient Elves, found in the depths of Deadwood\",\n    \"bonusValue\": 3\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/item",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit item",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should edit an item\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"name\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"bonusValue\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Modern bow\",\n    \"description\": \"Bow made by modern Elves, found in the depths of Deadwood\",\n    \"bonusValue\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/item/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"3"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit item - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"name\": \"Modern bow\",\n    \"description\": \"Bow made by modern Elves, found in the depths of Deadwood\",\n    \"bonusValue\": 1\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/item/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete the item\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/item/3",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"item",
						"3"
					]
				}
			},
			"response": []
		}
	]
}