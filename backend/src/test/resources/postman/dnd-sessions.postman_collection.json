{
	"info": {
		"_postman_id": "08482c4b-4875-4769-9e06-8534d777877a",
		"name": "dnd-sessions",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27144670"
	},
	"item": [
		{
			"name": "GET - all sessions",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is a valid JSON array\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by valid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains session data\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"sessionDate\");",
							"    pm.expect(jsonData).to.have.property(\"notes\");",
							"    pm.expect(jsonData).to.have.property(\"campaign\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session/10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by campaign title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should return sessions by campaign title\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session/campaign?title=Dragon Age Origins",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"campaign"
					],
					"query": [
						{
							"key": "title",
							"value": "Dragon Age Origins"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - session count by campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should return session count by campaign\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    pm.expect(pm.response.json()).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session/count",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"count"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - new session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should create a new session\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"sessionDate\");",
							"    pm.expect(jsonData).to.have.property(\"notes\");",
							"    pm.expect(jsonData).to.have.property(\"campaign\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sessionDate\": \"2024-12-12\",\n    \"notes\": \"The party found out what happened to wardens and defeated deamons in Soldier's Peak.\",\n    \"campaign\": {\n        \"title\": \"Dragon Age Origins\"\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/session",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should edit a session\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"sessionDate\");",
							"    pm.expect(jsonData).to.have.property(\"notes\");",
							"    pm.expect(jsonData).to.have.property(\"campaign\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sessionDate\": \"2024-12-12\",\n    \"notes\": \"The party found out what happened to wardens and WAS defeated BY deamons in Soldier's Peak.\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/session/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit session - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"sessionDate\": \"2024-12-12\",\n    \"notes\": \"The party found out what happened to wardens and WAS defeated BY deamons in Soldier's Peak.\",\n    \"campaign\": {\n        \"id\": 3\n    }\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/session/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete the session\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/session/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"session",
						"4"
					]
				}
			},
			"response": []
		}
	]
}