{
	"info": {
		"_postman_id": "94f67c83-543f-4181-9792-6cf7c67b7485",
		"name": "dnd-campaigns",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "27144670"
	},
	"item": [
		{
			"name": "GET - by valid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains campaign data\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"beginningDate\");",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(jsonData).to.have.property(\"characters\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - all campaigns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is a valid JSON array\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/10",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"10"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - planned campaigns",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response is a valid JSON array of titles\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/planned?date=2025-01-01",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"planned"
					],
					"query": [
						{
							"key": "date",
							"value": "2025-01-01"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by title",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains campaign data\", function () {",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"title\", \"Call of Cthulhu\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/title?title=Call of Cthulhu",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"title"
					],
					"query": [
						{
							"key": "title",
							"value": "Call of Cthulhu"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - by character count",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains campaigns with character count\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.be.an(\"array\");",
							"    jsonData.forEach(campaign => {",
							"        pm.expect(campaign[1]).to.be.at.least(2);",
							"    });",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/characters/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"characters",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "GET - search",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"",
							"pm.test(\"Response contains campaigns\", function () {",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData.content).to.be.an(\"array\");",
							"    pm.expect(jsonData.content.length).to.be.greaterThan(0);",
							"    pm.expect(jsonData.totalElements).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/search?title=dra&sort=title,desc&status=PLANNED,FINISHED",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"search"
					],
					"query": [
						{
							"key": "title",
							"value": "dra"
						},
						{
							"key": "sort",
							"value": "title,desc"
						},
						{
							"key": "status",
							"value": "PLANNED,FINISHED"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - new campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should create a new campaign\", function () {",
							"    pm.response.to.have.status(201);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"beginningDate\");",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Warhammer\",\n    \"description\": \"World of the distant future, where a stagnant human civilisation is beset by hostile aliens and supernatural creatures\",\n    \"beginningDate\": \"2025-01-20\",\n    \"status\": \"PLANNED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/campaign",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - new campaign - invalid data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"description\": \"World of the distant future, where a stagnant human civilisation is beset by hostile aliens and supernatural creatures\",\n    \"beginningDate\": \"2025-01-20\",\n    \"status\": \"PLANNED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/campaign",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - add existing character to campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should add character to campaign\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"beginningDate\");",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/characters/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"characters",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - add not existing character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/characters/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"characters",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - add existing session to campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should add session to campaign\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"beginningDate\");",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/sessions/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"sessions",
						"1"
					]
				}
			},
			"response": []
		},
		{
			"name": "POST - add not existing session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/sessions/5",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"sessions",
						"5"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit campaign",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should edit campaign\", function () {",
							"    pm.response.to.have.status(200);",
							"    pm.response.to.be.json;",
							"    const jsonData = pm.response.json();",
							"    pm.expect(jsonData).to.have.property(\"id\");",
							"    pm.expect(jsonData).to.have.property(\"title\");",
							"    pm.expect(jsonData).to.have.property(\"description\");",
							"    pm.expect(jsonData).to.have.property(\"beginningDate\");",
							"    pm.expect(jsonData).to.have.property(\"status\");",
							"    pm.expect(pm.response.json().id).to.be.a(\"number\");",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Dungeons and Dragons: Edited\",\n    \"description\": \"Exploring dungeons and slaying dragons\",\n    \"beginningDate\": \"2025-02-21\",\n    \"status\": \"PLANNED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/campaign/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "PUT - edit campaign - invalid id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Response status is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"title\": \"Dungeons and Dragons: Edited\",\n    \"description\": \"Exploring dungeons and slaying dragons\",\n    \"beginningDate\": \"2025-02-21\",\n    \"status\": \"PLANNED\"\n}",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "http://localhost:8080/api/campaign/6",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"6"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - by id",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should delete the campaign\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/4",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"4"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - remove character",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should remove character from campaign\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/characters/2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"characters",
						"2"
					]
				}
			},
			"response": []
		},
		{
			"name": "DELETE - remove session",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Should remove session from campaign\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript",
						"packages": {}
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:8080/api/campaign/2/sessions/1",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "8080",
					"path": [
						"api",
						"campaign",
						"2",
						"sessions",
						"1"
					]
				}
			},
			"response": []
		}
	]
}